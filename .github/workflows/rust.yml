name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
  
    runs-on: ${{ matrix.os }}

    steps:    
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup/toolchains/
          ~/.rustup/settings.toml
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1.0.6
      with:
          toolchain: nightly
          components: clippy
          default: true
          override: true
    - name: Build
      run: cargo build --verbose --release
    #- name: Run tests
    #  run: cargo test --verbose    
    - name: Rename executable (Linux / MacOS)
      run: mv target/release/powder_rs target/release/powder_rs_${{matrix.os}}
      if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}    
    - name: Upload Build Artifact (Linux / MacOS)
      uses: actions/upload-artifact@v3.1.2
      if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
      with:
        path: target/release/powder_rs_${{matrix.os}}
    - name: Upload Build Artifact (Windows)
      uses: actions/upload-artifact@v3.1.2
      if: ${{ matrix.os == 'windows-latest' }}
      with:
        path: target/release/powder_rs.exe
